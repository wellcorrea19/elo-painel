{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n      this.headers = {\n        'Content-Type': 'application/json',\n        'Content-Length': 'Content-Length',\n        Authorization: 'Bearer'\n      };\n    }\n\n    setTokenToHeader(user) {\n      this.reloadHeaderAuthorization();\n      this.headers.Authorization += ' ' + user.token;\n      localStorage.setItem('token', this.headers.Authorization);\n    }\n\n    checkUserWithToken() {\n      this.headers.Authorization = localStorage.getItem('token');\n    }\n\n    reloadHeaderAuthorization() {\n      localStorage.setItem('token', '');\n      this.headers.Authorization = 'Bearer';\n    }\n\n    login(user) {\n      return this.http.post(environment.loginUrl, {\n        email: user.username,\n        cpf: user.username,\n        senha: user.password,\n        versao: '1.1'\n      }, {\n        headers: this.headers\n      });\n    }\n\n    logout() {\n      return this.http.get(environment.defaultUrl + 'users/logout', {\n        headers: this.headers\n      });\n    }\n\n    getUser() {\n      this.checkUserWithToken();\n      return this.http.get(environment.defaultUrl + 'user', {\n        headers: this.headers\n      });\n    }\n\n    getUserById(id) {\n      this.checkUserWithToken();\n      return this.http.get(environment.defaultUrl + `user/${id}`, {\n        headers: this.headers\n      });\n    }\n\n    getAllUsers() {\n      this.checkUserWithToken();\n      return this.http.get(environment.defaultUrl + 'users', {\n        headers: this.headers\n      });\n    }\n\n    getAllUsersByCnpj(cnpjtransportadora) {\n      this.checkUserWithToken();\n      return this.http.post(environment.defaultUrl + `users/cnpjtransportadora`, {\n        cnpjtransportadora\n      }, {\n        headers: this.headers\n      });\n    }\n\n    getViagens(user) {\n      this.headers.token = user.token;\n      return this.http.get(environment.defaultUrl + `viagem`, {\n        headers: this.headers\n      });\n    }\n\n    getViagensTransportadora(cnpjTransportadora) {\n      return this.http.get(environment.defaultUrl + `painel/viagem/tabela/${cnpjTransportadora}`, {\n        headers: this.headers\n      });\n    }\n\n    getViagensGps(ids) {\n      return this.http.post(environment.defaultUrl + `painel/viagem/localizacao`, {\n        ids\n      }, {\n        headers: this.headers\n      });\n    }\n\n    registerUser(user) {\n      this.checkUserWithToken();\n      return this.http.post(environment.registerUrl, {\n        email: user.email\n      }, {\n        headers: this.headers\n      });\n    }\n\n    updateById(user) {\n      this.checkUserWithToken();\n      console.log(user);\n      return this.http.post(environment.defaultUrl + `users/updatebyid`, {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        telefone: user.telefone\n      }, {\n        headers: this.headers\n      });\n    }\n\n    calculateTime(olat, olgn, dlat, dlgn) {\n      const originLatLgn = olat + ',' + olgn;\n      const destinationLatLgn = dlat + ',' + dlgn;\n      return this.http.post(environment.defaultUrl + `viagem/tempo`, {\n        origem: originLatLgn,\n        destino: destinationLatLgn\n      }, {\n        headers: this.headers\n      });\n    }\n\n  }\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}