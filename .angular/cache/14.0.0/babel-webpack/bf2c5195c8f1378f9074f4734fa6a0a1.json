{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"../layout/sidebar/sidebar.component\";\nimport * as i3 from \"@agm/core\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"./viagem-table/viagem-table.component\";\n\nfunction ViagemComponent_agm_marker_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"agm-marker\", 22);\n  }\n\n  if (rf & 2) {\n    const marker_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"latitude\", marker_r1.lat)(\"longitude\", marker_r1.lng)(\"iconUrl\", marker_r1.icon);\n  }\n}\n\nexport let ViagemComponent = /*#__PURE__*/(() => {\n  class ViagemComponent {\n    constructor(api) {\n      this.api = api;\n      this.showFiller = false;\n      this.markerWidth = 51;\n      this.markerHeight = 26;\n      this.icons = {\n        fixo: {\n          name: 'Frota',\n          url: './assets/images/truckIconBlue.png',\n          scaledSize: {\n            width: this.markerWidth,\n            height: this.markerHeight\n          }\n        },\n        agregado: {\n          name: 'Agregado',\n          url: './assets/images/truckIconYellow.png',\n          scaledSize: {\n            width: this.markerWidth,\n            height: this.markerHeight\n          }\n        },\n        terceiro: {\n          name: 'Terceiro',\n          url: './assets/images/truckIconGreen.png',\n          scaledSize: {\n            width: this.markerWidth,\n            height: this.markerHeight\n          }\n        }\n      };\n      this.click = {\n        name: 'Click',\n        url: './assets/images/truckClicked.png',\n        scaledSize: {\n          width: this.markerWidth,\n          height: this.markerHeight\n        }\n      };\n      this.ids = [];\n      this.markers = [];\n      this.lat = -10.183056;\n      this.lng = -48.333611;\n      this.zoom = 5;\n      /**\r\n       * Cria o array de marcadores para por no mapa\r\n       */\n\n      this.createMapMarkers = () => __awaiter(this, void 0, void 0, function* () {\n        this.markers = [];\n        this.ids = [];\n        this.api.getViagensTransportadora(this.user.cnpjtransportadora).toPromise().then(data => __awaiter(this, void 0, void 0, function* () {\n          if (!data['error']) {\n            for (const viagem of data['viagens']) {\n              this.ids.push(viagem.idgps);\n            }\n\n            yield this.api.getViagensGps(this.ids).toPromise().then(gps => {\n              this.hour = this.updateHour();\n\n              for (let i = 0; i < gps['data'].length; i++) {\n                this.markers.push({\n                  id: gps['data'][i].id,\n                  lat: gps['data'][i].latitude,\n                  lng: gps['data'][i].longitude,\n                  icon: this.selectIconType('fixo')\n                });\n              }\n            });\n          }\n        })).then(() => {\n          const lastMarkerIndex = this.markers.length - 1;\n\n          if (lastMarkerIndex > 0) {\n            this.receberInformacao(this.markers[lastMarkerIndex].id);\n          }\n        });\n      });\n\n      this.updateHour = () => {\n        const date = new Date();\n        return ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + ' - ' + ('0' + date.getDate()).slice(-2) + '/' + ('0' + (date.getMonth() + 1)).slice(-2) + '/' + date.getFullYear();\n      };\n\n      this.recenterMap = (lt, lg) => {\n        this.lat = Number(lt);\n        this.lng = Number(lg);\n      };\n    }\n\n    ngOnInit() {\n      this.api.getUser().subscribe(user => __awaiter(this, void 0, void 0, function* () {\n        this.user = user;\n        this.hour = this.updateHour();\n        yield this.createMapMarkers();\n        this.interval = setInterval(this.createMapMarkers, 5 * 60 * 1000);\n      }));\n    }\n    /**\r\n     * Função que inicia quando abre o mapa, ela seta as legendas, as opções do mapa e os marcadores existentes.\r\n     * @param map é o $event do mapa\r\n     */\n\n\n    mapReady(map) {\n      this.setMapLegend(map);\n      this.setMapOptions(map);\n    }\n    /**\r\n     * Coloca as opções no mapa\r\n     * @param map é o $event do mapa\r\n     */\n\n\n    setMapOptions(map) {\n      map.setOptions({\n        streetViewControl: false\n      });\n    }\n    /**\r\n     * Coloca as legendas no mapa\r\n     * @param map é o $event do mapa\r\n     */\n\n\n    setMapLegend(map) {\n      const legend = document.getElementById('legend');\n\n      for (const key in this.icons) {\n        const type = this.icons[key];\n        const name = type.name;\n        const icon = type.url;\n        const div = document.createElement('div');\n        div.innerHTML = '<img  src=\"' + icon + '\" height=\"15px\" width=\"20px\"> ' + name;\n        legend.appendChild(div);\n      }\n\n      map.controls[google.maps.ControlPosition.RIGHT_CENTER].push(legend);\n    }\n\n    selectIconType(type) {\n      if (type === 'fixo') {\n        return this.icons.fixo;\n      } else {\n        if (type === 'agregado') {\n          return this.icons.agregado;\n        } else {\n          return this.icons.terceiro;\n        }\n      }\n    }\n\n    receberInformacao(id) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.unmarkMakers();\n\n        for (let i = 0; i < this.markers.length; i++) {\n          if (this.markers[i].id === id) {\n            this.markers[i].icon = this.click;\n            this.recenterMap(this.markers[i].lat, this.markers[i].lng);\n            this.zoom = 13;\n          }\n        }\n      });\n    }\n\n    unmarkMakers() {\n      for (let i = 0; i < this.markers.length; i++) {\n        this.markers[i].icon = this.icons.fixo;\n      }\n    }\n\n    updatePage() {\n      window.location.reload();\n    }\n\n    ngOnDestroy() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n\n  }\n\n  ViagemComponent.ɵfac = function ViagemComponent_Factory(t) {\n    return new (t || ViagemComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n  };\n\n  ViagemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ViagemComponent,\n    selectors: [[\"app-viagem\"]],\n    decls: 29,\n    vars: 6,\n    consts: [[1, \"bg-theme\"], [\"id\", \"wrapper\"], [1, \"clearfix\"], [1, \"content-wrapper\"], [1, \"container-fluid\"], [1, \"card-body\"], [1, \"behind\"], [1, \"map\", 3, \"latitude\", \"zoom\", \"longitude\", \"usePanning\", \"mapReady\"], [3, \"latitude\", \"longitude\", \"iconUrl\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"legend\", 1, \"legendIcon\"], [\"id\", \"legendTittle\"], [1, \"card\"], [1, \"frota\"], [1, \"btn-update\", 3, \"click\"], [1, \"icon-update\"], [1, \"buttons-box\"], [\"id\", \"resumo\"], [\"id\", \"em-viagem\"], [3, \"evento\"], [1, \"overlay\", \"toggle-menu\"], [\"href\", \"javaScript:void();\", 1, \"back-to-top\"], [1, \"fa\", \"fa-angle-double-up\"], [3, \"latitude\", \"longitude\", \"iconUrl\"]],\n    template: function ViagemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"body\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"app-sidebar\")(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"agm-map\", 7);\n        i0.ɵɵlistener(\"mapReady\", function ViagemComponent_Template_agm_map_mapReady_8_listener($event) {\n          return ctx.mapReady($event);\n        });\n        i0.ɵɵtemplate(9, ViagemComponent_agm_marker_9_Template, 1, 3, \"agm-marker\", 8);\n        i0.ɵɵelementStart(10, \"div\", 9)(11, \"div\", 10);\n        i0.ɵɵtext(12, \"Ve\\u00EDculos\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"mat-card\", 11)(14, \"mat-card-title\")(15, \"label\", 12);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ViagemComponent_Template_button_click_17_listener() {\n          return ctx.updatePage();\n        });\n        i0.ɵɵelementStart(18, \"mat-icon\", 14);\n        i0.ɵɵtext(19, \"update\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"mat-card-content\", 15)(21, \"button\", 16);\n        i0.ɵɵtext(22, \"Resumo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 17);\n        i0.ɵɵtext(24, \"Em Viagem\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"app-viagem-table\", 18);\n        i0.ɵɵlistener(\"evento\", function ViagemComponent_Template_app_viagem_table_evento_25_listener($event) {\n          return ctx.receberInformacao($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(26, \"div\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"a\", 20);\n        i0.ɵɵelement(28, \"i\", 21);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"latitude\", ctx.lat)(\"zoom\", ctx.zoom)(\"longitude\", ctx.lng)(\"usePanning\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.markers);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" Resumo da Frota (\", ctx.hour, \")\");\n      }\n    },\n    directives: [i2.SidebarComponent, i3.AgmMap, i4.NgForOf, i3.AgmMarker, i5.MatCard, i5.MatCardTitle, i6.MatIcon, i5.MatCardContent, i7.ViagemTableComponent],\n    styles: [\"agm-map[_ngcontent-%COMP%]{height:60vh}agm-marker[_ngcontent-%COMP%]{height:10px;size:10px}.card[_ngcontent-%COMP%]{margin-top:10px;box-shadow:#64646f33 0 7px 29px}.card-body[_ngcontent-%COMP%]{padding:1.25rem 0!important}.buttons-box[_ngcontent-%COMP%]{display:inline-block;vertical-align:middle;width:100%;background-image:linear-gradient(45deg,#00244c,#a2a2a2);color:#fff;border:none}#resumo[_ngcontent-%COMP%], #em-viagem[_ngcontent-%COMP%]{background-color:Transparent;border:none;color:#fff;font-size:16px;cursor:pointer;padding:15px 32px}#resumo[_ngcontent-%COMP%]:active, #em-viagem[_ngcontent-%COMP%]:active{background-color:#31bab7;outline:0}#resumo[_ngcontent-%COMP%]:focus, #em-viagem[_ngcontent-%COMP%]:focus{background-color:#31bab7;outline:0}.btn-update[_ngcontent-%COMP%]{height:31px;width:30px;border-radius:25px;background-image:linear-gradient(45deg,#00244c,#a2a2a2);color:#fff;border:none;position:absolute;top:30px;cursor:pointer}.icon-update[_ngcontent-%COMP%]{position:absolute;top:3px;left:3px}.behind[_ngcontent-%COMP%]{position:block;z-index:3}.frota[_ngcontent-%COMP%]{margin-top:5px;font-size:20px;padding:10px;color:#00244c;font-family:Arial,Helvetica,sans-serif}#legendTittle[_ngcontent-%COMP%]{color:#fff;font-family:Roboto,\\\"sans-serif\\\";font-size:13px;margin-bottom:5px}.container-fluid[_ngcontent-%COMP%]{margin:0}.legendIcon[_ngcontent-%COMP%]{background-image:linear-gradient(45deg,#00244c,#a2a2a2);padding:5px;border-radius:7px;margin-right:5px}\"]\n  });\n  return ViagemComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}