{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport Swal from \"sweetalert2\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/services/api.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/checkbox\";\nimport * as i6 from \"@angular/material/grid-list\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nexport let RegisterUserComponent = /*#__PURE__*/(() => {\n  class RegisterUserComponent {\n    constructor(dialogRef, api, formBuilder, apiService, router) {\n      this.dialogRef = dialogRef;\n      this.api = api;\n      this.formBuilder = formBuilder;\n      this.apiService = apiService;\n      this.router = router;\n      this.checked = false;\n    }\n\n    ngOnInit() {\n      this.signUpForm = this.formBuilder.group({\n        tracao: ['', Validators.compose([Validators.required, Validators.minLength(7), Validators.maxLength(7)])],\n        email: ['', Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(40), Validators.email])],\n        senha: ['', Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(15)])],\n        passwordCheck: ['', Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(15)])],\n        telefone: ['', Validators.compose([Validators.required, Validators.minLength(10), Validators.maxLength(15)])],\n        cpf: ['', Validators.compose([Validators.required, Validators.minLength(11), Validators.maxLength(11)])],\n        name: ['', Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(40)])]\n      });\n      this.api.getUser().subscribe(user => __awaiter(this, void 0, void 0, function* () {\n        this.user = user;\n        console.log(this.user.cnpjtransportadora);\n      }));\n    }\n\n    registerFrota() {\n      if (this.signUpForm.invalid && this.signUpForm.value.senha !== this.signUpForm.value.passwordCheck) {\n        Swal.fire('O formulário está inválido');\n        return;\n      }\n\n      const informedFrota = {\n        tracao: this.signUpForm.value.tracao,\n        name: this.signUpForm.value.name,\n        telefone: this.signUpForm.value.telefone,\n        cpf: this.signUpForm.value.cpf,\n        email: this.signUpForm.value.email,\n        senha: this.signUpForm.value.senha,\n        passwordCheck: this.signUpForm.value.passwordCheck,\n        cnpjtransportadora: this.user.cnpjtransportadora,\n        frota: '2'\n      };\n\n      try {\n        this.apiService.registerFrota(informedFrota).subscribe(user => __awaiter(this, void 0, void 0, function* () {\n          if (user['error']) {\n            Swal.fire(user['msg']);\n          } else {\n            yield this.apiService.setTokenToHeader(user);\n            yield window.location.reload();\n          }\n        }));\n      } catch (error) {\n        Swal.fire(error);\n      }\n    }\n\n    closeModal() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  RegisterUserComponent.ɵfac = function RegisterUserComponent_Factory(t) {\n    return new (t || RegisterUserComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  RegisterUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterUserComponent,\n    selectors: [[\"app-register-user\"]],\n    decls: 51,\n    vars: 3,\n    consts: [[1, \"content\"], [3, \"formGroup\"], [1, \"tittle\"], [1, \"text-center\"], [2, \"color\", \"black\", 3, \"ngModel\", \"ngModelChange\"], [\"cols\", \"3\", \"rowHeight\", \"3:1\"], [\"appearance\", \"standard\"], [1, \"label-title\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"tracao\", \"maxlength\", \"7\"], [1, \"label-title\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"telefone\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"cpf\", \"maxlength\", \"11\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"senha\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"passwordCheck\"], [1, \"form-group\", \"text-center\"], [1, \"button-style\", \"submit\", 3, \"click\"], [1, \"button-style\"], [1, \"button-style\", 3, \"click\"]],\n    template: function RegisterUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Informacoes do Usuario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"mat-checkbox\")(6, \"span\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterUserComponent_Template_span_ngModelChange_6_listener($event) {\n          return ctx.checked = $event;\n        });\n        i0.ɵɵtext(7, \"Usu\\u00E1rio Gestor?\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"mat-grid-list\", 5)(9, \"mat-grid-tile\")(10, \"mat-form-field\", 6)(11, \"mat-label\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterUserComponent_Template_mat_label_ngModelChange_11_listener($event) {\n          return ctx.checked = $event;\n        });\n        i0.ɵɵtext(12, \"Placa - Tra\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"mat-grid-tile\")(15, \"mat-form-field\", 6)(16, \"mat-label\", 9);\n        i0.ɵɵtext(17, \"Nome Completo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"mat-grid-tile\")(20, \"mat-form-field\", 6)(21, \"mat-label\", 9);\n        i0.ɵɵtext(22, \"Telefone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"mat-grid-tile\")(25, \"mat-form-field\", 6)(26, \"mat-label\", 9);\n        i0.ɵɵtext(27, \"CPF\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"mat-grid-tile\")(30, \"mat-form-field\", 6)(31, \"mat-label\", 9);\n        i0.ɵɵtext(32, \"E-mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"mat-grid-tile\")(35, \"mat-form-field\", 6)(36, \"mat-label\", 9);\n        i0.ɵɵtext(37, \"Senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"input\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"mat-grid-tile\")(40, \"mat-form-field\", 6)(41, \"mat-label\", 9);\n        i0.ɵɵtext(42, \"Confirmar Senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"input\", 15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(44, \"div\", 16)(45, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function RegisterUserComponent_Template_button_click_45_listener() {\n          return ctx.registerFrota();\n        });\n        i0.ɵɵtext(46, \" Cadastrar \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"button\", 18);\n        i0.ɵɵtext(48, \" Inativar \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function RegisterUserComponent_Template_button_click_49_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵtext(50, \" Voltar \");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.checked);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.checked);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i5.MatCheckbox, i3.NgControlStatus, i3.NgModel, i6.MatGridList, i6.MatGridTile, i7.MatFormField, i7.MatLabel, i8.MatInput, i3.DefaultValueAccessor, i3.FormControlName, i3.MaxLengthValidator],\n    styles: [\".label-title[_ngcontent-%COMP%]{font-size:12px;color:#b7b7b7;padding-left:5px}.close-modal[_ngcontent-%COMP%]{justify-content:flex-end;display:flex}.form-group[_ngcontent-%COMP%]{font-family:Times,Times New Roman,Georgia,serif}.tittle[_ngcontent-%COMP%]{color:#104179;font-family:Open Sans Condensed,sans-serif;font-size:20px;text-align:center;text-transform:capitalize}.button-style[_ngcontent-%COMP%]{background-color:#104179;border:none;outline:none;color:#fff;border-radius:10px;padding:10px 25px;text-decoration:none;margin:25px 5px;cursor:pointer}\"]\n  });\n  return RegisterUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}